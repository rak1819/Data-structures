Given an unsorted array, Arr[] of size N and that contains even number of occurrences for all numbers except two numbers. Find the two numbers in decreasing order which has odd occurrences.

Example 1:

Input:
N = 8
Arr = {4, 2, 4, 5, 2, 3, 3, 1}
Output: {5, 1} 
Explaination: 5 and 1 have odd occurrences.

java code:
using formula (xor&xor-1)^xor to get right most bit
and using right most bit and differentiating with two different bucket system
____________________________________________________________________________

class Solution
{
    public int[] twoOddNum(int Arr[], int N)
    {
        int xor = 0;
        for(int i =0;i<N;i++){
            xor ^= Arr[i];
        }
        int rightmost = (xor&(xor-1))^xor;
        int b1 = 0;
        int b2 = 0;
        for(int i=0;i<N;i++){
            if((Arr[i]&rightmost)>0){
                b1^=Arr[i];
            }
            else{
                b2^=Arr[i];
            }
        }
        int[] ans = new int[2];
        ans[0]=b1;
        ans[1]=b2;
        return ans;
    }
}

____________________________________________________________________________

time complexity - o(n);
space complexity - o(1);