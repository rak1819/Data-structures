Given a binary array nums and an integer goal, return the number of non-empty subarrays with a sum goal.

A subarray is a contiguous part of the array.

 

Example 1:

Input: nums = [1,0,1,0,1], goal = 2
Output: 4
Explanation: The 4 subarrays are bolded and underlined below:
[1,0,1,0,1]
[1,0,1,0,1]
[1,0,1,0,1]
[1,0,1,0,1]
Example 2:

Input: nums = [0,0,0,0,0], goal = 0
Output: 15

java code:
_____________________________________________________________________________
class Solution {
    public int numSubarraysWithSum(int[] nums, int goal) {
        return check(nums,goal)-check(nums,goal-1);
    }
    public int check(int[] nums,int goal){
        int res =0;
        int sum = 0;
        int left =0;
        for(int i = 0;i<nums.length;i++){
            sum += nums[i];

            while(sum>goal && left<=i){
                sum-=nums[left];
                left = left +1;
            }
            res +=(i-left+1);

        }
        return res;
    }
}
_____________________________________________________________________________