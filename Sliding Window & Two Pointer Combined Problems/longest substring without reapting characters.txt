Given a string s, find the length of the longest 
substring
 without repeating characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.

java solution:
_______________________________________________________________
class Solution {
    public int lengthOfLongestSubstring(String s) {
        int start =0;
        int max = 0;
        HashMap<Character,Integer> ht = new HashMap<>();
        for(int i =0;i<s.length();i++){
            if(ht.get(s.charAt(i))!=null){
                start = Math.max(start,ht.get(s.charAt(i))+1);
                ht.remove(s.charAt(i));
            }
            max = Math.max(max,i-start+1);
            ht.put(s.charAt(i),i);

        }
        return max;
    }
}
